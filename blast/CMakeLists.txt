cmake_minimum_required(VERSION 3.12)

project(NvBlast LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)

if(MSVC)
	add_compile_options(/arch:AVX)
else()
	add_compile_options(-mavx -mfma)
endif()

find_package(Boost REQUIRED)
find_package(CapnProto CONFIG REQUIRED)
include(GNUInstallDirs)

if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
	add_compile_definitions(_DEBUG)
else()
	add_compile_definitions(NDEBUG)
endif()

option(NVBLAST_STATIC "Build static libraries" OFF)
option(NVBLAST_USE_STATIC_WINCRT "Link statically to MSVC runtime" OFF)

if (NVBLAST_USE_STATIC_WINCRT)
	set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()

set(NVBLAST_INC_DIR "${CMAKE_SOURCE_DIR}/include")
set(NVBLAST_SRC_DIR "${CMAKE_SOURCE_DIR}/source")
set(NVBLAST_SDK_DIR "${NVBLAST_SRC_DIR}/sdk")
set(NVBLAST_SHARED_DIR "${NVBLAST_SRC_DIR}/shared")
set(NVBLAST_COMMON_DIR "${NVBLAST_SDK_DIR}/common")
set(NVBLAST_EXTENSIONS_DIR "${NVBLAST_SDK_DIR}/extensions")
set(NVBLAST_EXTENSIONS_INC_DIR "${NVBLAST_INC_DIR}/extensions")
set(NVBLAST_EXTENSIONS_ASSETUTILS_DIR "${NVBLAST_EXTENSIONS_DIR}/assetutils")
set(NVBLAST_EXTENSIONS_ASSETUTILS_INC_DIR "${NVBLAST_EXTENSIONS_INC_DIR}/assetutils")
set(NVBLAST_EXTENSIONS_AUTHORING_DIR "${NVBLAST_EXTENSIONS_DIR}/authoring")
set(NVBLAST_EXTENSIONS_AUTHORING_INC_DIR "${NVBLAST_EXTENSIONS_INC_DIR}/authoring")
set(NVBLAST_EXTENSIONS_AUTHORING_COMMON_DIR "${NVBLAST_EXTENSIONS_DIR}/authoringCommon")
set(NVBLAST_EXTENSIONS_AUTHORING_COMMON_INC_DIR "${NVBLAST_EXTENSIONS_INC_DIR}/authoringCommon")
set(NVBLAST_EXTENSIONS_SERIALIZATION_DIR "${NVBLAST_EXTENSIONS_DIR}/serialization")
set(NVBLAST_EXTENSIONS_SERIALIZATION_INC_DIR "${NVBLAST_EXTENSIONS_INC_DIR}/serialization")
set(NVBLAST_EXTENSIONS_SHADERS_DIR "${NVBLAST_EXTENSIONS_DIR}/shaders")
set(NVBLAST_EXTENSIONS_SHADERS_INC_DIR "${NVBLAST_EXTENSIONS_INC_DIR}/shaders")
set(NVBLAST_EXTENSIONS_STRESS_DIR "${NVBLAST_EXTENSIONS_DIR}/stress")
set(NVBLAST_EXTENSIONS_STRESS_INC_DIR "${NVBLAST_EXTENSIONS_INC_DIR}/stress")
set(NVBLAST_FILEBUFFER_DIR "${NVBLAST_SHARED_DIR}/NsFileBuffer/include")
set(NVBLAST_FOUNDATION_DIR "${NVBLAST_SHARED_DIR}/NsFoundation/include")
set(NVBLAST_FOUNDATION_INC_DIR "${NVBLAST_INC_DIR}/shared/NvFoundation")
set(NVBLAST_GLOBALS_DIR "${NVBLAST_SDK_DIR}/globals")
set(NVBLAST_GLOBALS_INC_DIR "${NVBLAST_INC_DIR}/globals")
set(NVBLAST_LOWLEVEL_DIR "${NVBLAST_SDK_DIR}/lowlevel")
set(NVBLAST_LOWLEVEL_INC_DIR "${NVBLAST_INC_DIR}/lowlevel")
set(NVBLAST_TASK_DIR "${NVBLAST_SHARED_DIR}/NvTask/include")
set(NVBLAST_TOOLKIT_DIR "${NVBLAST_SDK_DIR}/toolkit")
set(NVBLAST_TOOLKIT_INC_DIR "${NVBLAST_INC_DIR}/toolkit")

file(GLOB_RECURSE NVBLAST_INSTALL_HDRS ${NVBLAST_INC_DIR})

include_directories(
	${NVBLAST_COMMON_DIR}
	${NVBLAST_FOUNDATION_DIR}
	${NVBLAST_FOUNDATION_INC_DIR}
	${NVBLAST_GLOBALS_DIR}
	${NVBLAST_GLOBALS_INC_DIR}
	${NVBLAST_LOWLEVEL_DIR}
	${NVBLAST_LOWLEVEL_INC_DIR}
)

set(NVBLAST_FOUNDATION_HDRS
	"${NVBLAST_FOUNDATION_PLATFORM_HDRS}"
	"${NVBLAST_FOUNDATION_DIR}/NsAlignedMalloc.h"
	"${NVBLAST_FOUNDATION_DIR}/NsAllocator.h"
	"${NVBLAST_FOUNDATION_DIR}/NsAoS.h"
	"${NVBLAST_FOUNDATION_DIR}/NsArray.h"
	"${NVBLAST_FOUNDATION_DIR}/NsBasicTemplates.h"
	"${NVBLAST_FOUNDATION_DIR}/NsBitUtils.h"
	"${NVBLAST_FOUNDATION_DIR}/NsFPU.h"
	"${NVBLAST_FOUNDATION_DIR}/NsGlobals.h"
	"${NVBLAST_FOUNDATION_DIR}/Ns.h"
	"${NVBLAST_FOUNDATION_DIR}/NsHash.h"
	"${NVBLAST_FOUNDATION_DIR}/NsHashInternals.h"
	"${NVBLAST_FOUNDATION_DIR}/NsHashMap.h"
	"${NVBLAST_FOUNDATION_DIR}/NsHashSet.h"
	"${NVBLAST_FOUNDATION_DIR}/NsInlineAllocator.h"
	"${NVBLAST_FOUNDATION_DIR}/NsInlineAoS.h"
	"${NVBLAST_FOUNDATION_DIR}/NsInlineArray.h"
	"${NVBLAST_FOUNDATION_DIR}/NsIntrinsics.h"
	"${NVBLAST_FOUNDATION_DIR}/NsUserAllocated.h"
	"${NVBLAST_FOUNDATION_DIR}/NsVecMathAoSScalar.h"
	"${NVBLAST_FOUNDATION_DIR}/NsVecMathAoSScalarInline.h"
	"${NVBLAST_FOUNDATION_DIR}/NsVecMath.h"
	"${NVBLAST_FOUNDATION_DIR}/NsVecQuat.h"
	"${NVBLAST_FOUNDATION_DIR}/NvUnionCast.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/unix/NsUnixAoS.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/unix/NsUnixFPU.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/unix/NsUnixInlineAoS.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/unix/NsUnixIntrinsics.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/unix/NsUnixTrigConstants.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/unix/neon/NsUnixNeonAoS.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/unix/neon/NsUnixNeonInlineAoS.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/unix/sse2/NsUnixSse2AoS.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/unix/sse2/NsUnixSse2InlineAoS.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/windows/NsWindowsAoS.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/windows/NsWindowsFPU.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/windows/NsWindowsInlineAoS.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/windows/NsWindowsIntrinsics.h"
	"${NVBLAST_FOUNDATION_DIR}/platform/windows/NsWindowsTrigConstants.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvAllocatorCallback.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvAssert.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvBounds3.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvCTypes.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvErrorCallback.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvErrors.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvFlags.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/Nv.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvIntrinsics.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvIO.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvMat33.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvMat44.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvMath.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvPlane.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvPreprocessor.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvProfiler.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvQuat.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvSimpleTypes.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvTransform.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvVec2.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvVec3.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/NvVec4.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/platform/unix/NvUnixIntrinsics.h"
	"${NVBLAST_FOUNDATION_INC_DIR}/platform/windows/NvWindowsIntrinsics.h"
)

set(NVBLAST_FILEBUFFER_HDRS
	"${NVBLAST_FILEBUFFER_DIR}/NsMemoryBuffer.h"
	"${NVBLAST_FILEBUFFER_DIR}/NvFileBuf.h"
)

set(NVBLAST_TASK_HDRS
	"${NVBLAST_TASK_DIR}/NvCpuDispatcher.h"
	"${NVBLAST_TASK_DIR}/NvGpuDispatcher.h"
	"${NVBLAST_TASK_DIR}/NvTaskDefine.h"
	"${NVBLAST_TASK_DIR}/NvTask.h"
	"${NVBLAST_TASK_DIR}/NvTaskManager.h"
)

set(NVBLAST_FOUNDATION_EXTRA_HDRS
	"${NVBLAST_FOUNDATION_HDRS}"
	"${NVBLAST_FILEBUFFER_HDRS}"
	"${NVBLAST_TASK_HDRS}"
)


set(NVBLAST_HDRS
	"${NVBLAST_FOUNDATION_HDRS}"
	"${NVBLAST_COMMON_DIR}/NvBlastArray.h"
	"${NVBLAST_COMMON_DIR}/NvBlastAssert.h"
	"${NVBLAST_COMMON_DIR}/NvBlastAtomic.h"
	"${NVBLAST_COMMON_DIR}/NvBlastDLink.h"
	"${NVBLAST_COMMON_DIR}/NvBlastFixedArray.h"
	"${NVBLAST_COMMON_DIR}/NvBlastFixedBitmap.h"
	"${NVBLAST_COMMON_DIR}/NvBlastFixedBoolArray.h"
	"${NVBLAST_COMMON_DIR}/NvBlastFixedPriorityQueue.h"
	"${NVBLAST_COMMON_DIR}/NvBlastFixedQueue.h"
	"${NVBLAST_COMMON_DIR}/NvBlastGeometry.h"
	"${NVBLAST_COMMON_DIR}/NvBlastHashMap.h"
	"${NVBLAST_COMMON_DIR}/NvBlastHashSet.h"
	"${NVBLAST_COMMON_DIR}/NvBlastIncludeWindows.h"
	"${NVBLAST_COMMON_DIR}/NvBlastIndexFns.h"
	"${NVBLAST_COMMON_DIR}/NvBlastIteratorBase.h"
	"${NVBLAST_COMMON_DIR}/NvBlastMath.h"
	"${NVBLAST_COMMON_DIR}/NvBlastMemory.h"
	"${NVBLAST_COMMON_DIR}/NvBlastNvSharedHelpers.h"
	"${NVBLAST_COMMON_DIR}/NvBlastPreprocessorInternal.h"
	"${NVBLAST_COMMON_DIR}/NvBlastTime.h"
	"${NVBLAST_COMMON_DIR}/NvBlastVolumeIntegrals.h"
	"${NVBLAST_GLOBALS_DIR}/NvBlastInternalProfiler.h"
	"${NVBLAST_GLOBALS_INC_DIR}/NvBlastAllocator.h"
	"${NVBLAST_GLOBALS_INC_DIR}/NvBlastDebugRender.h"
	"${NVBLAST_GLOBALS_INC_DIR}/NvBlastGlobals.h"
	"${NVBLAST_GLOBALS_INC_DIR}/NvCMath.h"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastActor.h"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastActorSerializationBlock.h"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastAsset.h"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastChunkHierarchy.h"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastFamilyGraph.h"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastFamily.h"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastSupportGraph.h"
	"${NVBLAST_LOWLEVEL_INC_DIR}/NvBlast.h"
	"${NVBLAST_LOWLEVEL_INC_DIR}/NvBlastTypes.h"
)

set(NVBLAST_SRCS
	"${NVBLAST_COMMON_DIR}/NvBlastAssert.cpp"
	"${NVBLAST_COMMON_DIR}/NvBlastAtomic.cpp"
	"${NVBLAST_COMMON_DIR}/NvBlastTime.cpp"
	"${NVBLAST_COMMON_DIR}/NvBlastTimers.cpp"
	"${NVBLAST_GLOBALS_DIR}/NvBlastGlobals.cpp"
	"${NVBLAST_GLOBALS_DIR}/NvBlastInternalProfiler.cpp"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastActor.cpp"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastActorSerializationBlock.cpp"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastAsset.cpp"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastAssetHelper.cpp"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastFamily.cpp"
	"${NVBLAST_LOWLEVEL_DIR}/NvBlastFamilyGraph.cpp"
)

if (PHYSXBLAST_STATIC)
	add_library(NvBlast STATIC ${NVBLAST_SRCS} ${NVBLAST_HDRS})
else()
	add_library(NvBlast SHARED ${NVBLAST_SRCS} ${NVBLAST_HDRS})
endif()


set(NVBLAST_TK_HDRS
	"${NVBLAST_FOUNDATION_EXTRA_HDRS}"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkActorImpl.h"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkAssetImpl.h"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkCommon.h"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkEventQueue.h"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkFamilyImpl.h"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkFrameworkImpl.h"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkGroupImpl.h"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkGUID.h"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkJointImpl.h"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkTask.h"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkTaskImpl.h"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkTypeImpl.h"
	"${NVBLAST_TOOLKIT_INC_DIR}/NvBlastTkActor.h"
	"${NVBLAST_TOOLKIT_INC_DIR}/NvBlastTkAsset.h"
	"${NVBLAST_TOOLKIT_INC_DIR}/NvBlastTkEvent.h"
	"${NVBLAST_TOOLKIT_INC_DIR}/NvBlastTkFamily.h"
	"${NVBLAST_TOOLKIT_INC_DIR}/NvBlastTkFramework.h"
	"${NVBLAST_TOOLKIT_INC_DIR}/NvBlastTkGroup.h"
	"${NVBLAST_TOOLKIT_INC_DIR}/NvBlastTkGroupTaskManager.h"
	"${NVBLAST_TOOLKIT_INC_DIR}/NvBlastTk.h"
	"${NVBLAST_TOOLKIT_INC_DIR}/NvBlastTkIdentifiable.h"
	"${NVBLAST_TOOLKIT_INC_DIR}/NvBlastTkJoint.h"
	"${NVBLAST_TOOLKIT_INC_DIR}/NvBlastTkObject.h"
	"${NVBLAST_TOOLKIT_INC_DIR}/NvBlastTkType.h"
)

set(NVBLAST_TK_SRCS
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkActorImpl.cpp"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkAssetImpl.cpp"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkFamilyImpl.cpp"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkFrameworkImpl.cpp"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkGroupImpl.cpp"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkJointImpl.cpp"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkTask.cpp"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkTaskImpl.cpp"
	"${NVBLAST_TOOLKIT_DIR}/NvBlastTkTaskManager.cpp"
)

if (PHYSXBLAST_STATIC)
	add_library(NvBlastTk STATIC ${NVBLAST_TK_SRCS} ${NVBLAST_TK_HDRS})
else()
	add_library(NvBlastTk SHARED ${NVBLAST_TK_SRCS} ${NVBLAST_TK_HDRS})
endif()

target_link_libraries(NvBlastTk NvBlast)

target_include_directories(NvBlastTk PRIVATE
	${NVBLAST_FILEBUFFER_DIR}
	${NVBLAST_TASK_DIR}
	${NVBLAST_TOOLKIT_DIR}
	${NVBLAST_TOOLKIT_INC_DIR}
)


set(NVBLAST_EXT_ASSETUTILS_HDRS
	"${NVBLAST_FOUNDATION_HDRS}"
	"${NVBLAST_EXTENSIONS_ASSETUTILS_INC_DIR}/NvBlastExtAssetUtils.h"
)

set(NVBLAST_EXT_ASSETUTILS_SRCS
	"${NVBLAST_EXTENSIONS_ASSETUTILS_DIR}/NvBlastExtAssetUtils.cpp"
)

if (PHYSXBLAST_STATIC)
	add_library(NvBlastExtAssetUtils STATIC ${NVBLAST_EXT_ASSETUTILS_SRCS} ${NVBLAST_EXT_ASSETUTILS_HDRS})
else()
	add_library(NvBlastExtAssetUtils SHARED ${NVBLAST_EXT_ASSETUTILS_SRCS} ${NVBLAST_EXT_ASSETUTILS_HDRS})
endif()

target_link_libraries(NvBlastExtAssetUtils NvBlast)

target_include_directories(NvBlastExtAssetUtils PRIVATE ${NVBLAST_EXTENSIONS_ASSETUTILS_INC_DIR})


set(NVBLAST_EXT_AUTHORING_HDRS
	"${NVBLAST_FOUNDATION_HDRS}"
	"${NVBLAST_EXTENSIONS_ASSETUTILS_INC_DIR}/NvBlastExtAssetUtils.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtApexSharedParts.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringBondGeneratorImpl.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringBooleanToolImpl.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringCollisionBuilderImpl.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringCutoutImpl.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringFractureToolImpl.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringMeshCleanerImpl.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringMeshNoiser.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringMeshUtils.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringPatternGeneratorImpl.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringPerlinNoise.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringTriangulator.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringVSA.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtTriangleProcessor.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/btAlignedAllocator.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/btAlignedObjectArray.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/btConvexHullComputer.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/btMinMax.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/btScalar.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/btVector3.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/FloatMath.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdCircularList.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdCircularList.inl"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdICHull.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdManifoldMesh.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdMesh.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdMutex.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdRaycastMesh.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdSArray.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdTimer.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdVector.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdVector.inl"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdVHACD.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc/vhacdVolume.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/public/VHACD.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/src/FloatMath.inl"
	"${NVBLAST_EXTENSIONS_AUTHORING_COMMON_DIR}/NvBlastExtAuthoringAcceleratorImpl.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_COMMON_DIR}/NvBlastExtAuthoringInternalCommon.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_COMMON_DIR}/NvBlastExtAuthoringMeshImpl.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_INC_DIR}/NvBlastExtAuthoringBondGenerator.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_INC_DIR}/NvBlastExtAuthoringBooleanTool.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_INC_DIR}/NvBlastExtAuthoringCutout.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_INC_DIR}/NvBlastExtAuthoringFractureTool.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_INC_DIR}/NvBlastExtAuthoring.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_INC_DIR}/NvBlastExtAuthoringMeshCleaner.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_COMMON_INC_DIR}/NvBlastExtAuthoringAccelerator.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_COMMON_INC_DIR}/NvBlastExtAuthoringConvexMeshBuilder.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_COMMON_INC_DIR}/NvBlastExtAuthoringMesh.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_COMMON_INC_DIR}/NvBlastExtAuthoringPatternGenerator.h"
	"${NVBLAST_EXTENSIONS_AUTHORING_COMMON_INC_DIR}/NvBlastExtAuthoringTypes.h"
)

set(NVBLAST_EXT_AUTHORING_SRCS
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtApexSharedParts.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringBondGeneratorImpl.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringBooleanToolImpl.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringCollisionBuilderImpl.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoring.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringCutoutImpl.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringFractureToolImpl.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringMeshCleanerImpl.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringMeshNoiser.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringMeshUtils.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringPatternGeneratorImpl.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtAuthoringTriangulator.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/NvBlastExtTriangleProcessor.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/src/btAlignedAllocator.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/src/btConvexHullComputer.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/src/FloatMath.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/src/VHACD-ASYNC.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/src/VHACD.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/src/vhacdICHull.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/src/vhacdManifoldMesh.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/src/vhacdMesh.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/src/vhacdRaycastMesh.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/src/vhacdVolume.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_COMMON_DIR}/NvBlastExtAuthoringAcceleratorImpl.cpp"
	"${NVBLAST_EXTENSIONS_AUTHORING_COMMON_DIR}/NvBlastExtAuthoringMeshImpl.cpp"
)

if (PHYSXBLAST_STATIC)
	add_library(NvBlastExtAuthoring STATIC ${NVBLAST_EXT_AUTHORING_SRCS} ${NVBLAST_EXT_AUTHORING_HDRS})
else()
	add_library(NvBlastExtAuthoring SHARED ${NVBLAST_EXT_AUTHORING_SRCS} ${NVBLAST_EXT_AUTHORING_HDRS})
endif()

target_link_libraries(NvBlastExtAuthoring NvBlast)

target_include_directories(NvBlastExtAuthoring PRIVATE
	${Boost_INCLUDE_DIR}
	${NVBLAST_EXTENSIONS_ASSETUTILS_INC_DIR}
	${NVBLAST_EXTENSIONS_AUTHORING_DIR}
	${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/inc
	${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/public
	${NVBLAST_EXTENSIONS_AUTHORING_DIR}/VHACD/src
	${NVBLAST_EXTENSIONS_AUTHORING_COMMON_DIR}
	${NVBLAST_EXTENSIONS_AUTHORING_INC_DIR}
	${NVBLAST_EXTENSIONS_AUTHORING_COMMON_INC_DIR}
)


set(NVBLAST_DTO_DIR "${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/DTO")

capnp_generate_cpp(NVBLAST_EXT_SERIALIZATION_GEN_SRCS NVBLAST_EXT_SERIALIZATION_GEN_HDRS "${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtLlSerialization-capn")
get_filename_component(NVBLAST_EXT_SERIALIZATION_GEN_INC ${NVBLAST_EXT_SERIALIZATION_GEN_HDRS} DIRECTORY)

set(NVBLAST_EXT_SERIALIZATION_HDRS
	"${NVBLAST_FOUNDATION_EXTRA_HDRS}"
	"${NVBLAST_EXT_SERIALIZATION_GEN_HDRS}"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtInputStream.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtLlSerializerCAPN.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtOutputStream.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtSerializationCAPN.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtSerializationInternal.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_INC_DIR}/NvBlastExtLlSerialization.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_INC_DIR}/NvBlastExtSerialization.h"
	"${NVBLAST_DTO_DIR}/ActorDTO.h"
	"${NVBLAST_DTO_DIR}/AssetDTO.h"
	"${NVBLAST_DTO_DIR}/DTOMacros.h"
	"${NVBLAST_DTO_DIR}/FamilyDTO.h"
	"${NVBLAST_DTO_DIR}/FamilyGraphDTO.h"
	"${NVBLAST_DTO_DIR}/NvBlastBondDTO.h"
	"${NVBLAST_DTO_DIR}/NvBlastChunkDTO.h"
	"${NVBLAST_DTO_DIR}/NvBlastIDDTO.h"
)

set(NVBLAST_EXT_SERIALIZATION_SRCS
	"${NVBLAST_EXT_SERIALIZATION_GEN_SRCS}"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtInputStream.cpp"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtLlSerialization.cpp"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtOutputStream.cpp"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtSerialization.cpp"
	"${NVBLAST_DTO_DIR}/ActorDTO.cpp"
	"${NVBLAST_DTO_DIR}/AssetDTO.cpp"
	"${NVBLAST_DTO_DIR}/FamilyDTO.cpp"
	"${NVBLAST_DTO_DIR}/FamilyGraphDTO.cpp"
	"${NVBLAST_DTO_DIR}/NvBlastBondDTO.cpp"
	"${NVBLAST_DTO_DIR}/NvBlastChunkDTO.cpp"
	"${NVBLAST_DTO_DIR}/NvBlastIDDTO.cpp"
)

if (PHYSXBLAST_STATIC)
	add_library(NvBlastExtSerialization STATIC ${NVBLAST_EXT_SERIALIZATION_SRCS} ${NVBLAST_EXT_SERIALIZATION_HDRS})
else()
	add_library(NvBlastExtSerialization SHARED ${NVBLAST_EXT_SERIALIZATION_SRCS} ${NVBLAST_EXT_SERIALIZATION_HDRS})
endif()

target_link_libraries(NvBlastExtSerialization PUBLIC NvBlast PRIVATE CapnProto::capnp)

target_include_directories(NvBlastExtSerialization PRIVATE
	${NVBLAST_DTO_DIR}
	${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}
	${NVBLAST_EXTENSIONS_SERIALIZATION_INC_DIR}
	${NVBLAST_FILEBUFFER_DIR}
	${NVBLAST_TASK_DIR}
	${NVBLAST_EXT_SERIALIZATION_GEN_INC}
)


capnp_generate_cpp(NVBLAST_EXT_TK_SERIALIZATION_GEN_SRCS NVBLAST_EXT_TK_SERIALIZATION_GEN_HDRS "${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtTkSerialization-capn")
get_filename_component(NVBLAST_EXT_TK_SERIALIZATION_GEN_INC ${NVBLAST_EXT_TK_SERIALIZATION_GEN_HDRS} DIRECTORY)


set(NVBLAST_EXT_TK_SERIALIZATION_HDRS
	"${NVBLAST_FOUNDATION_EXTRA_HDRS}"
	"${NVBLAST_EXT_TK_SERIALIZATION_GEN_HDRS}"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtInputStream.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtLlSerializerCAPN.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtOutputStream.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtSerializationInternal.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtTkSerializerCAPN.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtTkSerializerRAW.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_INC_DIR}/NvBlastExtSerialization.h"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_INC_DIR}/NvBlastExtTkSerialization.h"
	"${NVBLAST_DTO_DIR}/NvVec3DTO.h"
	"${NVBLAST_DTO_DIR}/TkAssetDTO.h"
	"${NVBLAST_DTO_DIR}/TkAssetJointDescDTO.h"
)

set(NVBLAST_EXT_TK_SERIALIZATION_SRCS
	"${NVBLAST_EXT_TK_SERIALIZATION_GEN_SRCS}"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtTkSerialization.cpp"
	"${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}/NvBlastExtTkSerializerRAW.cpp"
	"${NVBLAST_DTO_DIR}/NvVec3DTO.cpp"
	"${NVBLAST_DTO_DIR}/TkAssetDTO.cpp"
	"${NVBLAST_DTO_DIR}/TkAssetJointDescDTO.cpp"
)

if (PHYSXBLAST_STATIC)
	add_library(NvBlastExtTkSerialization STATIC ${NVBLAST_EXT_TK_SERIALIZATION_SRCS} ${NVBLAST_EXT_TK_SERIALIZATION_HDRS})
else()
	add_library(NvBlastExtTkSerialization SHARED ${NVBLAST_EXT_TK_SERIALIZATION_SRCS} ${NVBLAST_EXT_TK_SERIALIZATION_HDRS})
endif()

target_link_libraries(NvBlastExtTkSerialization PUBLIC NvBlast PUBLIC NvBlastTk PUBLIC NvBlastExtSerialization PRIVATE CapnProto::capnp)

target_include_directories(NvBlastExtTkSerialization PRIVATE
	${NVBLAST_DTO_DIR}
	${NVBLAST_EXTENSIONS_SERIALIZATION_DIR}
	${NVBLAST_EXTENSIONS_SERIALIZATION_INC_DIR}
	${NVBLAST_FILEBUFFER_DIR}
	${NVBLAST_TASK_DIR}
	${NVBLAST_TOOLKIT_DIR}
	${NVBLAST_TOOLKIT_INC_DIR}
	${NVBLAST_EXT_TK_SERIALIZATION_GEN_INC}
)


set(NVBLAST_EXT_SHADERS_HDRS
	"${NVBLAST_FOUNDATION_HDRS}"
	"${NVBLAST_EXTENSIONS_SHADERS_DIR}/NvBlastExtDamageAcceleratorAABBTree.h"
	"${NVBLAST_EXTENSIONS_SHADERS_DIR}/NvBlastExtDamageAcceleratorInternal.h"
	"${NVBLAST_EXTENSIONS_SHADERS_INC_DIR}/NvBlastExtDamageShaders.h"
)

set(NVBLAST_EXT_SHADERS_SRCS
	"${NVBLAST_EXTENSIONS_SHADERS_DIR}/NvBlastExtDamageAcceleratorAABBTree.cpp"
	"${NVBLAST_EXTENSIONS_SHADERS_DIR}/NvBlastExtDamageAccelerators.cpp"
	"${NVBLAST_EXTENSIONS_SHADERS_DIR}/NvBlastExtDamageShaders.cpp"
)

if (PHYSXBLAST_STATIC)
	add_library(NvBlastExtShaders STATIC ${NVBLAST_EXT_SHADERS_SRCS} ${NVBLAST_EXT_SHADERS_HDRS})
else()
	add_library(NvBlastExtShaders SHARED ${NVBLAST_EXT_SHADERS_SRCS} ${NVBLAST_EXT_SHADERS_HDRS})
endif()

target_link_libraries(NvBlastExtShaders NvBlast)

target_include_directories(NvBlastExtShaders PRIVATE
	${NVBLAST_EXTENSIONS_SHADERS_DIR}
	${NVBLAST_EXTENSIONS_SHADERS_INC_DIR}
)


set(NVBLAST_STRESS_DIR "${NVBLAST_SHARED_DIR}/stress_solver")

set(NVBLAST_EXT_STRESS_HDRS
	"${NVBLAST_FOUNDATION_HDRS}"
	"${NVBLAST_EXTENSIONS_STRESS_INC_DIR}/NvBlastExtStressSolver.h"
	"${NVBLAST_STRESS_DIR}/anglin6.h"
	"${NVBLAST_STRESS_DIR}/bond.h"
	"${NVBLAST_STRESS_DIR}/buffer.h"
	"${NVBLAST_STRESS_DIR}/coupling.h"
	"${NVBLAST_STRESS_DIR}/inertia.h"
	"${NVBLAST_STRESS_DIR}/solver_types.h"
	"${NVBLAST_STRESS_DIR}/stress.h"
	"${NVBLAST_STRESS_DIR}/math/cgnr.h"
	"${NVBLAST_STRESS_DIR}/simd/simd.h"
	"${NVBLAST_STRESS_DIR}/simd/simd_device_query.h"
)

set(NVBLAST_EXT_STRESS_SRCS
	"${NVBLAST_EXTENSIONS_STRESS_DIR}/NvBlastExtStressSolver.cpp"
	"${NVBLAST_STRESS_DIR}/stress.cpp"
)

if (PHYSXBLAST_STATIC)
	add_library(NvBlastExtStress STATIC ${NVBLAST_EXT_STRESS_SRCS} ${NVBLAST_EXT_STRESS_HDRS})
else()
	add_library(NvBlastExtStress SHARED ${NVBLAST_EXT_STRESS_SRCS} ${NVBLAST_EXT_STRESS_HDRS})
endif()

target_link_libraries(NvBlastExtStress NvBlast)

target_include_directories(NvBlastExtStress PRIVATE
	${NVBLAST_EXTENSIONS_STRESS_DIR}
	${NVBLAST_EXTENSIONS_STRESS_INC_DIR}
	${NVBLAST_STRESS_DIR}
)

install(TARGETS NvBlast NvBlastTk NvBlastExtAssetUtils NvBlastExtAuthoring NvBlastExtSerialization NvBlastExtTkSerialization NvBlastExtShaders NvBlastExtStress EXPORT NvBlastTargets)
install(FILES ${NVBLAST_INSTALL_HDRS} TYPE INCLUDE)
install(EXPORT NvBlastTargets DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/nvblast NAMESPACE NvBlast::)
